name: On-push actions

on:
  push:
    branches: [ "main" ]
    paths:
      - .github/workflows/**
      - web-demo/**
      - mintyml/**
      - minty-wasm/**
  workflow_dispatch:
    inputs:
      changed_dirs:
        type: string
        default: '[".github","mintyml","minty-cli","minty-wasm","web-demo"]'
      skip_deploy_pages:
        type: boolean
        default: false

concurrency:
  group: "publish"
  cancel-in-progress: false

jobs:
  get-changes:
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ github.event_name != 'workflow_dispatch' && steps.changed_files.outputs.all_changed_files || inputs.changed_dirs || '[".github","mintyml","minty-cli","minty-wasm","web-demo"]' }}

    steps:
    - uses: actions/checkout@v4
    - name: Get changed files
      if: github.event_name != 'workflow_dispatch'
      id: changed_files
      uses: tj-actions/changed-files@v44
      with:
        dir_names: true
        dir_names_exclude_current_dir: true
        dir_names_max_depth: 1
        json: true
        escape_json: false

  on-push:
    runs-on: ubuntu-latest
    needs: get-changes
    env:
      update_core: ${{ contains(needs.get-changes.outputs.dirs, '"mintyml"') && '1' || '' }}
      update_cli: ${{ contains(needs.get-changes.outputs.dirs, '"minty-cli"') && '1' || '' }}
      update_node: ${{ contains(needs.get-changes.outputs.dirs, '"minty-wasm"') && '1' || '' }}
      update_demo: ${{ contains(needs.get-changes.outputs.dirs, '"web-demo"') && '1' || '' }}

    outputs:
      built_pages: ${{ env.update_core || env.update_node || env.update_demo }}

    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup

    - name: Test mintyml crate
      if: env.update_core
      run: |
        just test-core

    - name: Test mintyml-cli crate
      if: env.update_core || env.update_cli
      run: |
        just test-core

  publish-packages:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
    needs: on-push
    environment:
      name: package-managers
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup
    - name: Setup Git User
      env:
        GH_TOKEN: ${{ github.token || env.GH_TOKEN }}
      run: |
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions[bot]"
        gh auth setup-git

    - name: Publish Packages
      env:
        GH_TOKEN: ${{ github.token || env.GH_TOKEN }}
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        npm config -g set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
        just publish-packages
    - name: schedule release workflow
      env:
        GH_TOKEN: ${{ github.token || env.GH_TOKEN }}
      run: |
        just start-release-workflow
