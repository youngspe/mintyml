name: On-push actions

on:
  push:
    branches: [ "main" ]
    paths:
      - .github/workflows/**
      - web-demo/**
      - mintyml/**
      - minty-wasm/**
  workflow_dispatch:
    inputs:
      changed_dirs:
        default: '[".github","mintyml","minty-cli","minty-wasm","web-demo"]'
        type: string


# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  get-changes:
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ github.event_name != 'workflow_dispatch' && steps.changed_files.outputs.all_changed_files || '[".github","mintyml","minty-cli","minty-wasm","web-demo"]' }}

    steps:
      - uses: actions/checkout@v4
      - name: Get changed files
        if: github.event_name != 'workflow_dispatch'
        id: changed_files
        uses: tj-actions/changed-files@v44
        with:
          dir_names: true
          dir_names_exclude_current_dir: true
          dir_names_max_depth: 1
          json: true
          escape_json: false

  on-push:
    runs-on: ubuntu-latest
    needs: get-changes
    env:
      update_core: ${{ contains(needs.get-changes.outputs.dirs, '"mintyml"') && '1' || '' }}
      update_cli: ${{ contains(needs.get-changes.outputs.dirs, '"minty-cli"') && '1' || '' }}
      update_node: ${{ contains(needs.get-changes.outputs.dirs, '"minty-wasm"') && '1' || '' }}
      update_demo: ${{ contains(needs.get-changes.outputs.dirs, '"web-demo"') && '1' || '' }}

    outputs:
      built_pages: ${{ env.update_core || env.update_node || env.update_demo }}

    steps:
    - uses: taiki-e/install-action@just
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: "20"

    - name: Setup wasm-pack
      if: env.update_node || env.update_core || env.update_demo
      uses: jetli/wasm-pack-action@v0.4.0

    - name: Specify just commands
      id: just_commands
      run: |
        cmds=''
        if [ -n "$update_core" ]; then cmds+=" test"; fi
        if [ -n "$update_cli" ]; then cmds+=" test-cli"; fi
        if [ -n "$update_node" ]; then cmds+=" test-node"; fi
        if [ -n "$update_core$update_node$update_demo" ]; then cmds+=" build-web-demo"; fi
        echo "cmds=$cmds" >> "$GITHUB_OUTPUT"

    - name: Set web demo base URL
      if: env.update_core || env.update_node || env.update_demo
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        WEB_DEMO_BASE_URL=$(gh api "repos/$GITHUB_REPOSITORY/pages" --jq '.html_url')
        echo "::notice title=WEB_DEMO_BASE_URL::$WEB_DEMO_BASE_URL"
        echo "WEB_DEMO_BASE_URL=$WEB_DEMO_BASE_URL" >> "$GITHUB_ENV"

    - name: Execute just commands
      run: |
        just ${{ steps.just_commands.outputs.cmds }}

    - name: Upload GitHub Pages artifact
      if: env.update_core || env.update_node || env.update_demo
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./web-demo/dist/

  deploy-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: on-push
    if: needs.on-push.outputs.built_pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
