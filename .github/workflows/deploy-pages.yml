name: Deploy pages

on:
  push:
    branches: [ "main" ]
    paths:
      - .github/workflows/**
      - web-demo/**
      - mintyml/**
      - minty-wasm/**
  workflow_dispatch:


# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-pages:
    runs-on: ubuntu-latest
    steps:
    - uses: taiki-e/install-action@just
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: "20"

    - name: Rust cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Get npm cache directory
      id: npm-cache-dir
      run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Setup wasm-pack
      uses: jetli/wasm-pack-action@v0.4.0

    - name: Set web demo base URL
      env:
        GH_TOKEN: ${{ github.token || env.GH_TOKEN }}
      run: |
        WEB_DEMO_BASE_URL=$(gh api "repos/$GITHUB_REPOSITORY/pages" --jq '.html_url')
        echo "::notice title=WEB_DEMO_BASE_URL::$WEB_DEMO_BASE_URL"
        echo "WEB_DEMO_BASE_URL=$WEB_DEMO_BASE_URL" >> "$GITHUB_ENV"

    - name: Execute just commands
      run: |
        just test-node build-web-demo
    - name: Fix web-demo permissions
      run: |
        chmod -c -R +rX "web-demo/dist/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
        done

    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./web-demo/dist/

  deploy-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
